[INFO] 2025-07-17 14:00:25.600  io.lettuce.core.protocol.ConnectionWatchdog.java - Reconnecting, last destination was 127.0.0.1:6379
[WARN] 2025-07-17 14:00:25.609  io.lettuce.core.protocol.ConnectionWatchdog.java - Cannot reconnect to [127.0.0.1:6379]: Connection refused: no further information: /127.0.0.1:6379
[INFO] 2025-07-17 14:00:55.703  io.lettuce.core.protocol.ConnectionWatchdog.java - Reconnecting, last destination was 127.0.0.1:6379
[WARN] 2025-07-17 14:00:55.705  io.lettuce.core.protocol.ConnectionWatchdog.java - Cannot reconnect to [127.0.0.1:6379]: Connection refused: no further information: /127.0.0.1:6379
[INFO] 2025-07-17 14:01:25.800  io.lettuce.core.protocol.ConnectionWatchdog.java - Reconnecting, last destination was 127.0.0.1:6379
[WARN] 2025-07-17 14:01:25.803  io.lettuce.core.protocol.ConnectionWatchdog.java - Cannot reconnect to [127.0.0.1:6379]: Connection refused: no further information: /127.0.0.1:6379
[INFO] 2025-07-17 14:01:55.909  io.lettuce.core.protocol.ConnectionWatchdog.java - Reconnecting, last destination was 127.0.0.1:6379
[WARN] 2025-07-17 14:01:55.911  io.lettuce.core.protocol.ConnectionWatchdog.java - Cannot reconnect to [127.0.0.1:6379]: Connection refused: no further information: /127.0.0.1:6379
[INFO] 2025-07-17 14:02:26.000  io.lettuce.core.protocol.ConnectionWatchdog.java - Reconnecting, last destination was 127.0.0.1:6379
[WARN] 2025-07-17 14:02:26.005  io.lettuce.core.protocol.ConnectionWatchdog.java - Cannot reconnect to [127.0.0.1:6379]: Connection refused: no further information: /127.0.0.1:6379
[INFO] 2025-07-17 14:02:56.113  io.lettuce.core.protocol.ConnectionWatchdog.java - Reconnecting, last destination was 127.0.0.1:6379
[WARN] 2025-07-17 14:02:56.115  io.lettuce.core.protocol.ConnectionWatchdog.java - Cannot reconnect to [127.0.0.1:6379]: Connection refused: no further information: /127.0.0.1:6379
[INFO] 2025-07-17 14:03:23.181  com.xiao.AppMainServer.java - Starting AppMainServer on DESKTOP-QQUQJ86 with PID 12896 (C:\Users\user\biddingdataserver\target\classes started by user in C:\Users\user\biddingdataserver)
[DEBUG] 2025-07-17 14:03:23.184  com.xiao.AppMainServer.java - Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[INFO] 2025-07-17 14:03:23.185  com.xiao.AppMainServer.java - No active profile set, falling back to default profiles: default
[INFO] 2025-07-17 14:03:24.454  org.springframework.data.repository.config.RepositoryConfigurationDelegate.java - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO] 2025-07-17 14:03:24.459  org.springframework.data.repository.config.RepositoryConfigurationDelegate.java - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-07-17 14:03:24.582  org.springframework.data.repository.config.RepositoryConfigurationDelegate.java - Finished Spring Data repository scanning in 99ms. Found 0 Redis repository interfaces.
[INFO] 2025-07-17 14:03:25.103  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-17 14:03:25.104  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-17 14:03:25.141  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-17 14:03:25.230  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-17 14:03:25.236  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-17 14:03:25.243  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-17 14:03:25.245  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-17 14:03:25.254  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-17 14:03:25.255  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'transactionAdviceConfig' of type [com.xiao.config.TransactionAdviceConfig$$EnhancerBySpringCGLIB$$b3e233ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-17 14:03:25.421  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'redisConfig' of type [com.xiao.config.RedisConfig$$EnhancerBySpringCGLIB$$9c8a5c90] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-17 14:03:25.816  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.java - Tomcat initialized with port(s): 8090 (http)
[INFO] 2025-07-17 14:03:25.832  org.apache.coyote.http11.Http11NioProtocol.java - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-07-17 14:03:25.833  org.apache.catalina.core.StandardService.java - Starting service [Tomcat]
[INFO] 2025-07-17 14:03:25.833  org.apache.catalina.core.StandardEngine.java - Starting Servlet engine: [Apache Tomcat/9.0.31]
[INFO] 2025-07-17 14:03:26.057  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].java - Initializing Spring embedded WebApplicationContext
[INFO] 2025-07-17 14:03:26.057  org.springframework.web.context.ContextLoader.java - Root WebApplicationContext: initialization completed in 2804 ms
[DEBUG] 2025-07-17 14:03:27.145  com.xiao.config.RedisConfig$$EnhancerBySpringCGLIB$$9c8a5c90.java - 自定义RedisCacheManager加载完成
[WARN] 2025-07-17 14:03:27.799  org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration.java - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
[INFO] 2025-07-17 14:03:27.838  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.java - Initializing ExecutorService 'taskScheduler'
[INFO] 2025-07-17 14:03:27.905  org.apache.coyote.http11.Http11NioProtocol.java - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-07-17 14:03:27.962  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.java - Tomcat started on port(s): 8090 (http) with context path ''
[INFO] 2025-07-17 14:03:27.968  com.xiao.AppMainServer.java - Started AppMainServer in 5.545 seconds (JVM running for 8.255)
[INFO] 2025-07-17 14:06:42.024  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].java - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-07-17 14:06:42.026  org.springframework.web.servlet.DispatcherServlet.java - Initializing Servlet 'dispatcherServlet'
[INFO] 2025-07-17 14:06:42.039  org.springframework.web.servlet.DispatcherServlet.java - Completed initialization in 12 ms
[WARN] 2025-07-17 14:06:42.063  org.springframework.web.servlet.PageNotFound.java - No mapping for GET /
[WARN] 2025-07-17 14:06:42.192  org.springframework.web.servlet.PageNotFound.java - No mapping for GET /favicon.ico
[INFO] 2025-07-17 14:16:09.634  io.lettuce.core.EpollProvider.java - Starting without optional epoll library
[INFO] 2025-07-17 14:16:09.640  io.lettuce.core.KqueueProvider.java - Starting without optional kqueue library
[INFO] 2025-07-17 14:16:27.060  com.xiao.exception.RunTimeException.java - org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1199)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1178)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:942)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:353)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:134)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:97)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:84)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:215)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:188)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53)
	at com.xiao.util.RedisUtils.get(RedisUtils.java:75)
	at com.xiao.core.basic.sys.LoginController.login(LoginController.java:93)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:234)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:207)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:369)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1197)
	... 54 more
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:777)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:702)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:829)

[INFO] 2025-07-17 14:17:09.734  com.xiao.exception.RunTimeException.java - org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1199)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1178)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:942)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:353)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:134)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:97)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:84)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:215)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:188)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53)
	at com.xiao.util.RedisUtils.get(RedisUtils.java:75)
	at com.xiao.core.basic.sys.LoginController.login(LoginController.java:93)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:234)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:207)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:369)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1197)
	... 54 more
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:777)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:702)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:829)

[INFO] 2025-07-17 14:17:10.910  com.xiao.exception.RunTimeException.java - org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1199)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1178)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:942)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:353)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:134)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:97)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:84)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:215)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:188)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53)
	at com.xiao.util.RedisUtils.get(RedisUtils.java:75)
	at com.xiao.core.basic.sys.LoginController.login(LoginController.java:93)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:234)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:207)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:369)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1197)
	... 54 more
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:777)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:702)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:829)

[INFO] 2025-07-17 14:18:32.593  com.alibaba.druid.pool.DruidDataSource.java - {dataSource-1} inited
[DEBUG] 2025-07-17 14:18:33.277  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByMap.java - ==>  Preparing: SELECT o.operator_id,o.real_Name,o.login_name,o.login_pwd,o.phone_tel,o.email,o.roleinfoId,o.add_time,o.edit_time,r.role_Name,o.oper_code,o.lastTime,o.failTimes, o.companyName,o.unifiedCode,o.corporate,o.phoneNo,o.jbrxm,o.jbrphone FROM operator o LEFT JOIN admin_roleinfo r ON o.roleinfoId = r.roleInfo_Id WHERE login_name = ? and oper_code is null ORDER BY o.operator_id 
[DEBUG] 2025-07-17 14:18:33.311  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByMap.java - ==> Parameters: systemadmin(String)
[DEBUG] 2025-07-17 14:18:33.349  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByMap.java - <==      Total: 1
[DEBUG] 2025-07-17 14:18:33.365  com.xiao.core.basic.operator.mapper.OperatorMapper.queryLogin.java - ==>  Preparing: SELECT * FROM operator where login_name = ? and login_pwd = ? 
[DEBUG] 2025-07-17 14:18:33.365  com.xiao.core.basic.operator.mapper.OperatorMapper.queryLogin.java - ==> Parameters: systemadmin(String), b6c381111658160aa7fe7f440f173c68(String)
[DEBUG] 2025-07-17 14:18:33.370  com.xiao.core.basic.operator.mapper.OperatorMapper.queryLogin.java - <==      Total: 1
[DEBUG] 2025-07-17 14:18:33.795  com.xiao.core.basic.operator.mapper.OperatorMapper.update.java - ==>  Preparing: UPDATE operator SET real_Name = ? , login_name=?, login_pwd=? , phone_tel=?, roleinfoId=?, failTimes = ?, lastTime = null, companyName=?, unifiedCode=?, corporate=?, phoneNo=?, jbrxm=?, jbrphone=?, edit_time = now() WHERE operator_id = ? 
[DEBUG] 2025-07-17 14:18:33.796  com.xiao.core.basic.operator.mapper.OperatorMapper.update.java - ==> Parameters: systemadmin(String), systemadmin(String), b6c381111658160aa7fe7f440f173c68(String), 13725836914(String), 1(Integer), 0(String), 胜达高科信息工程有限公司(String), 123(String), 徐杰(String), 123(String), 陈用威(String), 18858484349(String), 2(Integer)
[DEBUG] 2025-07-17 14:18:33.800  com.xiao.core.basic.operator.mapper.OperatorMapper.update.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:18:33.809  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:18:33.810  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 用户登录(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:18:33.813  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:18:33.878  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:18:33.878  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:18:33.882  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:18:33.887  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:18:33.888  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:18:33.891  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:18:34.043  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:18:34.044  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:18:34.049  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:19:10.457  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:19:10.459  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:19:10.463  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:19:10.471  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:19:10.472  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:19:10.475  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:19:10.566  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:19:10.567  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:19:10.571  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:19:33.493  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByMap.java - ==>  Preparing: SELECT o.operator_id,o.real_Name,o.login_name,o.login_pwd,o.phone_tel,o.email,o.roleinfoId,o.add_time,o.edit_time,r.role_Name,o.oper_code,o.lastTime,o.failTimes, o.companyName,o.unifiedCode,o.corporate,o.phoneNo,o.jbrxm,o.jbrphone FROM operator o LEFT JOIN admin_roleinfo r ON o.roleinfoId = r.roleInfo_Id WHERE login_name = ? and oper_code is null ORDER BY o.operator_id 
[DEBUG] 2025-07-17 14:19:33.493  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByMap.java - ==> Parameters: systemadmin(String)
[DEBUG] 2025-07-17 14:19:33.497  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByMap.java - <==      Total: 1
[DEBUG] 2025-07-17 14:19:33.503  com.xiao.core.basic.operator.mapper.OperatorMapper.queryLogin.java - ==>  Preparing: SELECT * FROM operator where login_name = ? and login_pwd = ? 
[DEBUG] 2025-07-17 14:19:33.503  com.xiao.core.basic.operator.mapper.OperatorMapper.queryLogin.java - ==> Parameters: systemadmin(String), b6c381111658160aa7fe7f440f173c68(String)
[DEBUG] 2025-07-17 14:19:33.509  com.xiao.core.basic.operator.mapper.OperatorMapper.queryLogin.java - <==      Total: 1
[DEBUG] 2025-07-17 14:19:33.517  com.xiao.core.basic.operator.mapper.OperatorMapper.update.java - ==>  Preparing: UPDATE operator SET real_Name = ? , login_name=?, login_pwd=? , phone_tel=?, roleinfoId=?, failTimes = ?, lastTime = null, companyName=?, unifiedCode=?, corporate=?, phoneNo=?, jbrxm=?, jbrphone=?, edit_time = now() WHERE operator_id = ? 
[DEBUG] 2025-07-17 14:19:33.518  com.xiao.core.basic.operator.mapper.OperatorMapper.update.java - ==> Parameters: systemadmin(String), systemadmin(String), b6c381111658160aa7fe7f440f173c68(String), 13725836914(String), 1(Integer), 0(String), 胜达高科信息工程有限公司(String), 123(String), 徐杰(String), 123(String), 陈用威(String), 18858484349(String), 2(Integer)
[DEBUG] 2025-07-17 14:19:33.522  com.xiao.core.basic.operator.mapper.OperatorMapper.update.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:19:33.526  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:19:33.527  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 用户登录(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:19:33.530  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:19:33.554  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:19:33.555  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:19:33.558  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:19:33.565  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:19:33.567  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:19:33.571  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:19:33.583  com.xiao.core.basic.admin_menu.mapper.AdminMenuMapper.queryChildMenuByUserSub.java - ==>  Preparing: select * from ( SELECT m.menu_id as smenu_id,m.menu_name as smenu_name,m.menu_url as smenu_url, m.state as sstate,m.parent_no as sparent_no,m.add_Time as sadd_Time, m.edit_Time as sedit_Time,m.sort_order as ssort_order,m.imageurl as simageurl,m.menu_auth as smenu_auth FROM admin_menu m LEFT JOIN admin_rolemenu ar on m.menu_Id = ar.menu_Id where m.parent_no is null AND ar.roleInfo_Id = ? ) a LEFT JOIN ( select rm.* from admin_menu rm LEFT JOIN admin_rolemenu ar on rm.menu_Id = ar.menu_Id where rm.parent_no is NOT null AND ar.roleInfo_Id = ? ) b on a.smenu_id = b.parent_no order by a.ssort_order,b.sort_order 
[DEBUG] 2025-07-17 14:19:33.584  com.xiao.core.basic.admin_menu.mapper.AdminMenuMapper.queryChildMenuByUserSub.java - ==> Parameters: 1(Integer), 1(Integer)
[DEBUG] 2025-07-17 14:19:33.595  com.xiao.core.basic.admin_menu.mapper.AdminMenuMapper.queryChildMenuByUserSub.java - <==      Total: 6
[DEBUG] 2025-07-17 14:19:33.601  com.xiao.core.basic.admin_menu.mapper.AdminMenuMapper.queryMenuBtn.java - ==>  Preparing: SELECT a.menu_Id,a.menu_url, m.btnType FROM `admin_menu` a LEFT JOIN admin_btn m on a.menu_Id=m.menu_Id LEFT JOIN admin_rolebtn r on r.btn_id=m.btn_id WHERE r.roleInfo_Id =? 
[DEBUG] 2025-07-17 14:19:33.601  com.xiao.core.basic.admin_menu.mapper.AdminMenuMapper.queryMenuBtn.java - ==> Parameters: 1(String)
[DEBUG] 2025-07-17 14:19:33.609  com.xiao.core.basic.admin_menu.mapper.AdminMenuMapper.queryMenuBtn.java - <==      Total: 19
[DEBUG] 2025-07-17 14:19:33.716  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:19:33.718  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:19:33.723  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:19:37.433  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:19:37.433  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:19:37.437  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:19:37.445  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:19:37.446  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:19:37.451  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:19:37.513  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:19:37.514  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:19:37.518  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:23:58.432  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:23:58.433  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:23:58.437  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:23:58.443  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:23:58.443  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:23:58.446  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:23:58.555  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:23:58.555  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:23:58.559  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:01.366  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:24:01.368  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:24:01.371  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:01.385  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:24:01.385  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:24:01.390  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:24:01.408  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM bidding_info WHERE is_del=0 
[DEBUG] 2025-07-17 14:24:01.408  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:24:01.412  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:01.429  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==>  Preparing: select id,project_number,project_name,publish_date,content,project_id,total_content,data_source,html_url from bidding_info WHERE is_del=0 order by publish_date desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:24:01.430  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==> Parameters: 0(Integer), 15(Integer)
[DEBUG] 2025-07-17 14:24:01.558  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - <==      Total: 15
[DEBUG] 2025-07-17 14:24:26.441  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:24:26.441  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:24:26.451  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:26.457  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:24:26.457  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:24:26.460  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:24:26.470  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM bidding_info WHERE is_del=0 
[DEBUG] 2025-07-17 14:24:26.470  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:24:26.473  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:26.478  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==>  Preparing: select id,project_number,project_name,publish_date,content,project_id,total_content,data_source,html_url from bidding_info WHERE is_del=0 order by publish_date desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:24:26.479  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==> Parameters: 15(Integer), 15(Integer)
[DEBUG] 2025-07-17 14:24:26.589  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - <==      Total: 15
[DEBUG] 2025-07-17 14:24:32.341  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:24:32.341  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:24:32.345  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:32.354  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:24:32.355  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:24:32.358  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:24:32.376  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-17 14:24:32.376  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:24:32.389  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:32.394  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:24:32.395  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:24:32.441  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-17 14:24:34.186  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:24:34.186  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:24:34.189  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:34.194  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:24:34.194  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:24:34.197  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:24:34.205  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM bidding_info WHERE is_del=0 
[DEBUG] 2025-07-17 14:24:34.205  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:24:34.208  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:34.212  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==>  Preparing: select id,project_number,project_name,publish_date,content,project_id,total_content,data_source,html_url from bidding_info WHERE is_del=0 order by publish_date desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:24:34.212  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==> Parameters: 0(Integer), 15(Integer)
[DEBUG] 2025-07-17 14:24:34.329  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - <==      Total: 15
[DEBUG] 2025-07-17 14:24:36.292  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:24:36.292  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:24:36.295  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:36.301  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:24:36.302  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:24:36.305  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:24:36.313  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM bidding_info WHERE is_del=0 
[DEBUG] 2025-07-17 14:24:36.314  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:24:36.317  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:36.323  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==>  Preparing: select id,project_number,project_name,publish_date,content,project_id,total_content,data_source,html_url from bidding_info WHERE is_del=0 order by publish_date desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:24:36.324  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==> Parameters: 15(Integer), 15(Integer)
[DEBUG] 2025-07-17 14:24:36.422  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - <==      Total: 15
[DEBUG] 2025-07-17 14:24:38.387  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:24:38.387  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:24:38.389  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:38.394  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:24:38.394  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:24:38.397  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:24:38.405  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-17 14:24:38.405  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:24:38.417  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:38.420  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:24:38.420  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:24:38.469  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-17 14:24:39.942  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:24:39.942  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:24:39.946  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:39.950  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:24:39.950  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:24:39.953  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:24:39.963  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-17 14:24:39.964  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:24:39.976  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:39.981  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:24:39.981  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 10(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:24:40.026  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-17 14:24:42.305  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:24:42.305  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:24:42.308  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:42.313  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:24:42.313  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:24:42.317  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:24:42.325  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM bidding_info WHERE is_del=0 
[DEBUG] 2025-07-17 14:24:42.325  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:24:42.328  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:42.334  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==>  Preparing: select id,project_number,project_name,publish_date,content,project_id,total_content,data_source,html_url from bidding_info WHERE is_del=0 order by publish_date desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:24:42.335  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==> Parameters: 0(Integer), 15(Integer)
[DEBUG] 2025-07-17 14:24:42.444  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - <==      Total: 15
[DEBUG] 2025-07-17 14:24:45.026  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:24:45.027  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:24:45.030  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:45.035  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:24:45.037  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:24:45.042  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:24:45.052  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM bidding_info WHERE is_del=0 
[DEBUG] 2025-07-17 14:24:45.052  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:24:45.055  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:24:45.061  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==>  Preparing: select id,project_number,project_name,publish_date,content,project_id,total_content,data_source,html_url from bidding_info WHERE is_del=0 order by publish_date desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:24:45.061  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==> Parameters: 15(Integer), 15(Integer)
[DEBUG] 2025-07-17 14:24:45.161  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - <==      Total: 15
[DEBUG] 2025-07-17 14:25:07.046  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:25:07.046  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:25:07.049  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:25:07.053  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:25:07.054  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 删除操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:25:07.056  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:25:07.072  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.deleteById.java - ==>  Preparing: update bidding_info set is_del=1 WHERE id=? 
[DEBUG] 2025-07-17 14:25:07.072  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.deleteById.java - ==> Parameters: 1455(String)
[DEBUG] 2025-07-17 14:25:07.077  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.deleteById.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:25:07.095  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:25:07.095  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:25:07.098  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:25:07.102  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:25:07.102  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:25:07.104  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:25:07.112  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM bidding_info WHERE is_del=0 
[DEBUG] 2025-07-17 14:25:07.113  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:25:07.116  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:25:07.121  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==>  Preparing: select id,project_number,project_name,publish_date,content,project_id,total_content,data_source,html_url from bidding_info WHERE is_del=0 order by publish_date desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:25:07.121  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==> Parameters: 15(Integer), 15(Integer)
[DEBUG] 2025-07-17 14:25:07.221  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - <==      Total: 15
[DEBUG] 2025-07-17 14:25:22.756  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:25:22.757  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:25:22.759  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:25:22.769  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:25:22.769  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:25:22.772  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:25:22.784  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM bidding_info WHERE is_del=0 
[DEBUG] 2025-07-17 14:25:22.784  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:25:22.790  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:25:22.796  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==>  Preparing: select id,project_number,project_name,publish_date,content,project_id,total_content,data_source,html_url from bidding_info WHERE is_del=0 order by publish_date desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:25:22.796  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==> Parameters: 30(Integer), 15(Integer)
[DEBUG] 2025-07-17 14:25:22.908  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - <==      Total: 15
[DEBUG] 2025-07-17 14:25:28.933  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:25:28.933  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:25:28.938  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:25:28.942  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:25:28.942  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 删除操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:25:28.945  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:25:28.953  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.deleteById.java - ==>  Preparing: update bidding_info set is_del=1 WHERE id=? 
[DEBUG] 2025-07-17 14:25:28.953  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.deleteById.java - ==> Parameters: 1437(String)
[DEBUG] 2025-07-17 14:25:28.956  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.deleteById.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:25:28.973  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:25:28.973  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:25:28.975  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:25:28.978  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:25:28.979  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:25:28.982  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:25:28.990  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM bidding_info WHERE is_del=0 
[DEBUG] 2025-07-17 14:25:28.990  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:25:28.993  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:25:28.997  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==>  Preparing: select id,project_number,project_name,publish_date,content,project_id,total_content,data_source,html_url from bidding_info WHERE is_del=0 order by publish_date desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:25:28.998  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==> Parameters: 30(Integer), 15(Integer)
[DEBUG] 2025-07-17 14:25:29.107  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - <==      Total: 15
[DEBUG] 2025-07-17 14:25:34.246  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:25:34.247  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:25:34.252  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:25:34.256  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:25:34.257  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:25:34.260  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:25:34.314  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-17 14:25:34.314  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:25:34.329  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:25:34.358  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:25:34.359  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:25:34.403  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-17 14:25:39.360  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:25:39.360  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:25:39.362  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:25:39.367  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:25:39.367  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:25:39.370  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:25:39.380  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-17 14:25:39.381  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:25:39.393  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:25:39.398  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:25:39.398  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 30(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:25:39.443  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-17 14:25:46.878  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:25:46.878  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:25:46.881  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:25:46.884  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:25:46.887  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:25:46.890  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:25:46.899  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-17 14:25:46.899  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:25:46.911  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:25:46.916  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:25:46.917  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 40(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:25:46.963  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-17 14:26:02.479  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:26:02.479  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:26:02.482  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:26:02.486  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:26:02.487  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 删除操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:26:02.489  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:26:02.497  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.deleteById.java - ==>  Preparing: update zhongbiao set is_del=1 WHERE id=? 
[DEBUG] 2025-07-17 14:26:02.497  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.deleteById.java - ==> Parameters: 6078(String)
[DEBUG] 2025-07-17 14:26:02.500  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.deleteById.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:26:02.519  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:26:02.519  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:26:02.522  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:26:02.526  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:26:02.526  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:26:02.529  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:26:02.537  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-17 14:26:02.538  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:26:02.550  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:26:02.556  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:26:02.557  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 40(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:26:02.603  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-17 14:28:37.811  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:28:37.811  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:28:37.816  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:37.820  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:28:37.820  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:28:37.823  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:28:37.980  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:28:37.980  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:28:37.983  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:37.988  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:28:37.989  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:28:37.992  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:28:38.001  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-17 14:28:38.002  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:28:38.018  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:38.031  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:28:38.031  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:28:38.078  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-17 14:28:40.961  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:28:40.961  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:28:40.964  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:40.968  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:28:40.969  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:28:40.972  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:28:40.978  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM bidding_info WHERE is_del=0 
[DEBUG] 2025-07-17 14:28:40.979  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:28:40.982  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:40.985  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==>  Preparing: select id,project_number,project_name,publish_date,content,project_id,total_content,data_source,html_url from bidding_info WHERE is_del=0 order by publish_date desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:28:40.986  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==> Parameters: 0(Integer), 15(Integer)
[DEBUG] 2025-07-17 14:28:41.122  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - <==      Total: 15
[DEBUG] 2025-07-17 14:28:43.791  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:28:43.791  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:28:43.793  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:43.799  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:28:43.799  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:28:43.802  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:28:43.808  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-17 14:28:43.808  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:28:43.820  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:43.827  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-17 14:28:43.827  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:28:43.872  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-17 14:28:46.217  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:28:46.217  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:28:46.220  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:46.224  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:28:46.224  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 角色-查询角色列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:28:46.226  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:28:46.238  com.xiao.core.basic.admin_roleinfo.mapper.AdminRoleinfoMapper.queryByCount.java - ==>  Preparing: select count(1) FROM admin_roleinfo r LEFT JOIN operator o ON r.operator_id = o.operator_id order by roleInfo_Id 
[DEBUG] 2025-07-17 14:28:46.238  com.xiao.core.basic.admin_roleinfo.mapper.AdminRoleinfoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:28:46.240  com.xiao.core.basic.admin_roleinfo.mapper.AdminRoleinfoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:46.250  com.xiao.core.basic.admin_roleinfo.mapper.AdminRoleinfoMapper.queryByMap.java - ==>  Preparing: SELECT r.*,o.login_name FROM admin_roleinfo r LEFT JOIN operator o ON r.operator_id = o.operator_id order by roleInfo_Id LIMIT ?,? 
[DEBUG] 2025-07-17 14:28:46.251  com.xiao.core.basic.admin_roleinfo.mapper.AdminRoleinfoMapper.queryByMap.java - ==> Parameters: 0(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:28:46.253  com.xiao.core.basic.admin_roleinfo.mapper.AdminRoleinfoMapper.queryByMap.java - <==      Total: 3
[DEBUG] 2025-07-17 14:28:48.544  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:28:48.544  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:28:48.553  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:48.557  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:28:48.557  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询用户角色操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:28:48.560  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:28:48.567  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:28:48.567  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:28:48.569  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:48.574  com.xiao.core.basic.operator.mapper.OperatorMapper.queryAllRole.java - ==>  Preparing: SELECT roleInfo_Id , role_Name FROM admin_roleinfo 
[DEBUG] 2025-07-17 14:28:48.575  com.xiao.core.basic.operator.mapper.OperatorMapper.queryAllRole.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:28:48.576  com.xiao.core.basic.operator.mapper.OperatorMapper.queryAllRole.java - <==      Total: 3
[DEBUG] 2025-07-17 14:28:48.582  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-17 14:28:48.582  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询用户列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-17 14:28:48.585  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-17 14:28:48.593  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(*) FROM operator o LEFT JOIN admin_roleinfo r ON o.roleinfoId = r.roleInfo_Id ORDER BY o.operator_id 
[DEBUG] 2025-07-17 14:28:48.593  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:28:48.598  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:48.603  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByMap.java - ==>  Preparing: SELECT o.operator_id,o.real_Name,o.login_name,o.login_pwd,o.phone_tel,o.email,o.roleinfoId,o.add_time,o.edit_time,r.role_Name,o.oper_code,o.lastTime,o.failTimes, o.companyName,o.unifiedCode,o.corporate,o.phoneNo,o.jbrxm,o.jbrphone FROM operator o LEFT JOIN admin_roleinfo r ON o.roleinfoId = r.roleInfo_Id ORDER BY o.operator_id LIMIT ?, ? 
[DEBUG] 2025-07-17 14:28:48.603  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByMap.java - ==> Parameters: 0(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:28:48.609  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-17 14:28:49.538  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:28:49.538  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:28:49.540  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:49.550  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByCount.java - ==>  Preparing: select count(1) FROM operator_log order by operatorLogId 
[DEBUG] 2025-07-17 14:28:49.550  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:28:49.555  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:49.558  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByMap.java - ==>  Preparing: SELECT a.operatorLogId,a.remark,a.loginName,a.userName,a.createTime,b.role_Name from operator_log a left join admin_roleinfo b on a.roleId=b.roleInfo_Id order by operatorLogId desc LIMIT ?,? 
[DEBUG] 2025-07-17 14:28:49.559  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByMap.java - ==> Parameters: 0(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:28:49.591  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-17 14:28:52.846  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:28:52.846  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:28:52.849  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:52.857  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByCount.java - ==>  Preparing: select count(1) FROM operator_log order by operatorLogId 
[DEBUG] 2025-07-17 14:28:52.857  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:28:52.862  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:52.866  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByMap.java - ==>  Preparing: SELECT a.operatorLogId,a.remark,a.loginName,a.userName,a.createTime,b.role_Name from operator_log a left join admin_roleinfo b on a.roleId=b.roleInfo_Id order by operatorLogId desc LIMIT ?,? 
[DEBUG] 2025-07-17 14:28:52.867  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByMap.java - ==> Parameters: 10(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:28:52.902  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-17 14:28:54.375  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:28:54.375  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:28:54.377  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:54.386  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByCount.java - ==>  Preparing: select count(1) FROM operator_log order by operatorLogId 
[DEBUG] 2025-07-17 14:28:54.386  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:28:54.392  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:54.396  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByMap.java - ==>  Preparing: SELECT a.operatorLogId,a.remark,a.loginName,a.userName,a.createTime,b.role_Name from operator_log a left join admin_roleinfo b on a.roleId=b.roleInfo_Id order by operatorLogId desc LIMIT ?,? 
[DEBUG] 2025-07-17 14:28:54.396  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByMap.java - ==> Parameters: 20(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:28:54.430  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-17 14:28:55.883  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:28:55.884  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:28:55.886  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:55.893  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByCount.java - ==>  Preparing: select count(1) FROM operator_log order by operatorLogId 
[DEBUG] 2025-07-17 14:28:55.893  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:28:55.898  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:55.903  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByMap.java - ==>  Preparing: SELECT a.operatorLogId,a.remark,a.loginName,a.userName,a.createTime,b.role_Name from operator_log a left join admin_roleinfo b on a.roleId=b.roleInfo_Id order by operatorLogId desc LIMIT ?,? 
[DEBUG] 2025-07-17 14:28:55.904  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByMap.java - ==> Parameters: 30(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:28:55.937  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-17 14:28:57.281  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-17 14:28:57.281  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-17 14:28:57.284  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:57.290  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByCount.java - ==>  Preparing: select count(1) FROM operator_log order by operatorLogId 
[DEBUG] 2025-07-17 14:28:57.290  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-17 14:28:57.295  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-17 14:28:57.300  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByMap.java - ==>  Preparing: SELECT a.operatorLogId,a.remark,a.loginName,a.userName,a.createTime,b.role_Name from operator_log a left join admin_roleinfo b on a.roleId=b.roleInfo_Id order by operatorLogId desc LIMIT ?,? 
[DEBUG] 2025-07-17 14:28:57.300  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByMap.java - ==> Parameters: 40(Integer), 10(Integer)
[DEBUG] 2025-07-17 14:28:57.334  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.queryByMap.java - <==      Total: 10
