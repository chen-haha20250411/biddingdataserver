[INFO] 2025-07-18 09:01:50.219  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.java - Shutting down ExecutorService 'taskScheduler'
[INFO] 2025-07-18 09:01:51.818  com.alibaba.druid.pool.DruidDataSource.java - {dataSource-1} closing ...
[INFO] 2025-07-18 09:01:51.830  com.alibaba.druid.pool.DruidDataSource.java - {dataSource-1} closed
[INFO] 2025-07-18 09:22:39.979  com.xiao.AppMainServer.java - Starting AppMainServer on DESKTOP-QQUQJ86 with PID 27456 (C:\Users\user\biddingdataserver\target\classes started by user in C:\Users\user\biddingdataserver)
[DEBUG] 2025-07-18 09:22:39.984  com.xiao.AppMainServer.java - Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[INFO] 2025-07-18 09:22:39.985  com.xiao.AppMainServer.java - No active profile set, falling back to default profiles: default
[INFO] 2025-07-18 09:22:41.257  org.springframework.data.repository.config.RepositoryConfigurationDelegate.java - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO] 2025-07-18 09:22:41.262  org.springframework.data.repository.config.RepositoryConfigurationDelegate.java - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-07-18 09:22:41.393  org.springframework.data.repository.config.RepositoryConfigurationDelegate.java - Finished Spring Data repository scanning in 106ms. Found 0 Redis repository interfaces.
[INFO] 2025-07-18 09:22:41.969  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-18 09:22:41.970  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-18 09:22:42.012  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-18 09:22:42.125  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-18 09:22:42.130  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-18 09:22:42.136  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-18 09:22:42.138  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-18 09:22:42.146  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-18 09:22:42.147  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'transactionAdviceConfig' of type [com.xiao.config.TransactionAdviceConfig$$EnhancerBySpringCGLIB$$16571051] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-18 09:22:42.284  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'redisConfig' of type [com.xiao.config.RedisConfig$$EnhancerBySpringCGLIB$$feff3936] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-18 09:22:42.699  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.java - Tomcat initialized with port(s): 8090 (http)
[INFO] 2025-07-18 09:22:42.714  org.apache.coyote.http11.Http11NioProtocol.java - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-07-18 09:22:42.715  org.apache.catalina.core.StandardService.java - Starting service [Tomcat]
[INFO] 2025-07-18 09:22:42.715  org.apache.catalina.core.StandardEngine.java - Starting Servlet engine: [Apache Tomcat/9.0.31]
[INFO] 2025-07-18 09:22:42.949  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].java - Initializing Spring embedded WebApplicationContext
[INFO] 2025-07-18 09:22:42.950  org.springframework.web.context.ContextLoader.java - Root WebApplicationContext: initialization completed in 2887 ms
[DEBUG] 2025-07-18 09:22:44.217  com.xiao.config.RedisConfig$$EnhancerBySpringCGLIB$$feff3936.java - 自定义RedisCacheManager加载完成
[WARN] 2025-07-18 09:22:44.941  org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration.java - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
[INFO] 2025-07-18 09:22:44.985  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.java - Initializing ExecutorService 'taskScheduler'
[INFO] 2025-07-18 09:22:45.060  org.apache.coyote.http11.Http11NioProtocol.java - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-07-18 09:22:45.100  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.java - Tomcat started on port(s): 8090 (http) with context path ''
[INFO] 2025-07-18 09:22:45.105  com.xiao.AppMainServer.java - Started AppMainServer in 5.636 seconds (JVM running for 8.845)
[INFO] 2025-07-18 09:22:53.004  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].java - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-07-18 09:22:53.005  org.springframework.web.servlet.DispatcherServlet.java - Initializing Servlet 'dispatcherServlet'
[INFO] 2025-07-18 09:22:53.021  org.springframework.web.servlet.DispatcherServlet.java - Completed initialization in 16 ms
[INFO] 2025-07-18 09:22:54.145  io.lettuce.core.EpollProvider.java - Starting without optional epoll library
[INFO] 2025-07-18 09:22:54.147  io.lettuce.core.KqueueProvider.java - Starting without optional kqueue library
[INFO] 2025-07-18 09:23:00.604  com.alibaba.druid.pool.DruidDataSource.java - {dataSource-1} inited
[DEBUG] 2025-07-18 09:23:01.322  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByMap.java - ==>  Preparing: SELECT o.operator_id,o.real_Name,o.login_name,o.login_pwd,o.phone_tel,o.email,o.roleinfoId,o.add_time,o.edit_time,r.role_Name,o.oper_code,o.lastTime,o.failTimes, o.companyName,o.unifiedCode,o.corporate,o.phoneNo,o.jbrxm,o.jbrphone FROM operator o LEFT JOIN admin_roleinfo r ON o.roleinfoId = r.roleInfo_Id WHERE login_name = ? and oper_code is null ORDER BY o.operator_id 
[DEBUG] 2025-07-18 09:23:01.357  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByMap.java - ==> Parameters: chenyw(String)
[DEBUG] 2025-07-18 09:23:01.400  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByMap.java - <==      Total: 1
[DEBUG] 2025-07-18 09:23:01.415  com.xiao.core.basic.operator.mapper.OperatorMapper.queryLogin.java - ==>  Preparing: SELECT * FROM operator where login_name = ? and login_pwd = ? 
[DEBUG] 2025-07-18 09:23:01.416  com.xiao.core.basic.operator.mapper.OperatorMapper.queryLogin.java - ==> Parameters: chenyw(String), e10adc3949ba59abbe56e057f20f883e(String)
[DEBUG] 2025-07-18 09:23:01.420  com.xiao.core.basic.operator.mapper.OperatorMapper.queryLogin.java - <==      Total: 1
[DEBUG] 2025-07-18 09:23:01.878  com.xiao.core.basic.operator.mapper.OperatorMapper.update.java - ==>  Preparing: UPDATE operator SET real_Name = ? , login_name=?, login_pwd=? , phone_tel=?, roleinfoId=?, failTimes = ?, lastTime = null, companyName=?, unifiedCode=?, corporate=?, phoneNo=?, jbrxm=?, jbrphone=?, edit_time = now() WHERE operator_id = ? 
[DEBUG] 2025-07-18 09:23:01.879  com.xiao.core.basic.operator.mapper.OperatorMapper.update.java - ==> Parameters: 陈用威(String), chenyw(String), e10adc3949ba59abbe56e057f20f883e(String), 18858484349(String), 4(Integer), 0(String), 胜达高科信息工程有限公司(String), 123(String), 徐杰(String), 123(String), 陈用威(String), 18858484349(String), 3(Integer)
[DEBUG] 2025-07-18 09:23:01.886  com.xiao.core.basic.operator.mapper.OperatorMapper.update.java - <==    Updates: 1
[DEBUG] 2025-07-18 09:23:01.896  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-18 09:23:01.899  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 用户登录(String), chenyw(String), 陈用威(String), 4(Integer)
[DEBUG] 2025-07-18 09:23:01.902  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-18 09:23:01.960  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-18 09:23:01.961  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 3(String)
[DEBUG] 2025-07-18 09:23:01.967  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-18 09:23:01.973  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-18 09:23:01.973  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), chenyw(String), 陈用威(String), 4(Integer)
[DEBUG] 2025-07-18 09:23:01.978  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[WARN] 2025-07-18 09:23:02.121  org.springframework.web.servlet.PageNotFound.java - No mapping for OPTIONS /admin/homePage/getStatisticAdmin
[DEBUG] 2025-07-18 09:23:02.128  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-18 09:23:02.129  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 3(String)
[DEBUG] 2025-07-18 09:23:02.135  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-18 09:23:06.575  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-18 09:23:06.576  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 3(String)
[DEBUG] 2025-07-18 09:23:06.609  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-18 09:23:06.617  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-18 09:23:06.618  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), chenyw(String), 陈用威(String), 4(Integer)
[DEBUG] 2025-07-18 09:23:06.624  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-18 09:23:06.647  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-18 09:23:06.647  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-18 09:23:06.663  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-18 09:23:06.671  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-18 09:23:06.671  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 10(Integer)
[DEBUG] 2025-07-18 09:23:06.724  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-18 09:23:40.655  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-18 09:23:40.656  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 3(String)
[DEBUG] 2025-07-18 09:23:40.660  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-18 09:23:40.665  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-18 09:23:40.666  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), chenyw(String), 陈用威(String), 4(Integer)
[DEBUG] 2025-07-18 09:23:40.669  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-18 09:23:40.815  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-18 09:23:40.816  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 3(String)
[DEBUG] 2025-07-18 09:23:40.820  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-18 09:23:40.829  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-18 09:23:40.829  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), chenyw(String), 陈用威(String), 4(Integer)
[DEBUG] 2025-07-18 09:23:40.833  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-18 09:23:40.842  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-18 09:23:40.843  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-18 09:23:40.856  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-18 09:23:40.868  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-18 09:23:40.869  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 10(Integer)
[DEBUG] 2025-07-18 09:23:40.925  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-18 09:24:06.938  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-18 09:24:06.939  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 3(String)
[DEBUG] 2025-07-18 09:24:06.942  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-18 09:24:06.947  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-18 09:24:06.949  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), chenyw(String), 陈用威(String), 4(Integer)
[DEBUG] 2025-07-18 09:24:06.952  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-18 09:24:07.112  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-18 09:24:07.113  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 3(String)
[DEBUG] 2025-07-18 09:24:07.118  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-18 09:24:07.127  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-18 09:24:07.128  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), chenyw(String), 陈用威(String), 4(Integer)
[DEBUG] 2025-07-18 09:24:07.139  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-18 09:24:07.151  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-18 09:24:07.151  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-18 09:24:07.164  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-18 09:24:07.176  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-18 09:24:07.177  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 10(Integer)
[DEBUG] 2025-07-18 09:24:07.235  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 10
[DEBUG] 2025-07-18 09:24:22.825  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByMap.java - ==>  Preparing: SELECT o.operator_id,o.real_Name,o.login_name,o.login_pwd,o.phone_tel,o.email,o.roleinfoId,o.add_time,o.edit_time,r.role_Name,o.oper_code,o.lastTime,o.failTimes, o.companyName,o.unifiedCode,o.corporate,o.phoneNo,o.jbrxm,o.jbrphone FROM operator o LEFT JOIN admin_roleinfo r ON o.roleinfoId = r.roleInfo_Id WHERE login_name = ? and oper_code is null ORDER BY o.operator_id 
[DEBUG] 2025-07-18 09:24:22.826  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByMap.java - ==> Parameters: systemadmin(String)
[DEBUG] 2025-07-18 09:24:22.834  com.xiao.core.basic.operator.mapper.OperatorMapper.queryByMap.java - <==      Total: 1
[DEBUG] 2025-07-18 09:24:22.843  com.xiao.core.basic.operator.mapper.OperatorMapper.queryLogin.java - ==>  Preparing: SELECT * FROM operator where login_name = ? and login_pwd = ? 
[DEBUG] 2025-07-18 09:24:22.843  com.xiao.core.basic.operator.mapper.OperatorMapper.queryLogin.java - ==> Parameters: systemadmin(String), b6c381111658160aa7fe7f440f173c68(String)
[DEBUG] 2025-07-18 09:24:22.854  com.xiao.core.basic.operator.mapper.OperatorMapper.queryLogin.java - <==      Total: 1
[DEBUG] 2025-07-18 09:24:22.867  com.xiao.core.basic.operator.mapper.OperatorMapper.update.java - ==>  Preparing: UPDATE operator SET real_Name = ? , login_name=?, login_pwd=? , phone_tel=?, roleinfoId=?, failTimes = ?, lastTime = null, companyName=?, unifiedCode=?, corporate=?, phoneNo=?, jbrxm=?, jbrphone=?, edit_time = now() WHERE operator_id = ? 
[DEBUG] 2025-07-18 09:24:22.869  com.xiao.core.basic.operator.mapper.OperatorMapper.update.java - ==> Parameters: systemadmin(String), systemadmin(String), b6c381111658160aa7fe7f440f173c68(String), 13725836914(String), 1(Integer), 0(String), 胜达高科信息工程有限公司(String), 123(String), 徐杰(String), 123(String), 陈用威(String), 18858484349(String), 2(Integer)
[DEBUG] 2025-07-18 09:24:22.872  com.xiao.core.basic.operator.mapper.OperatorMapper.update.java - <==    Updates: 1
[DEBUG] 2025-07-18 09:24:22.877  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-18 09:24:22.878  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 用户登录(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-18 09:24:22.882  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-18 09:24:22.906  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-18 09:24:22.907  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-18 09:24:22.910  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-18 09:24:22.915  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-18 09:24:22.916  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-18 09:24:22.920  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-18 09:24:22.936  com.xiao.core.basic.admin_menu.mapper.AdminMenuMapper.queryChildMenuByUserSub.java - ==>  Preparing: select * from ( SELECT m.menu_id as smenu_id,m.menu_name as smenu_name,m.menu_url as smenu_url, m.state as sstate,m.parent_no as sparent_no,m.add_Time as sadd_Time, m.edit_Time as sedit_Time,m.sort_order as ssort_order,m.imageurl as simageurl,m.menu_auth as smenu_auth FROM admin_menu m LEFT JOIN admin_rolemenu ar on m.menu_Id = ar.menu_Id where m.parent_no is null AND ar.roleInfo_Id = ? ) a LEFT JOIN ( select rm.* from admin_menu rm LEFT JOIN admin_rolemenu ar on rm.menu_Id = ar.menu_Id where rm.parent_no is NOT null AND ar.roleInfo_Id = ? ) b on a.smenu_id = b.parent_no order by a.ssort_order,b.sort_order 
[DEBUG] 2025-07-18 09:24:22.937  com.xiao.core.basic.admin_menu.mapper.AdminMenuMapper.queryChildMenuByUserSub.java - ==> Parameters: 1(Integer), 1(Integer)
[DEBUG] 2025-07-18 09:24:22.953  com.xiao.core.basic.admin_menu.mapper.AdminMenuMapper.queryChildMenuByUserSub.java - <==      Total: 6
[DEBUG] 2025-07-18 09:24:22.959  com.xiao.core.basic.admin_menu.mapper.AdminMenuMapper.queryMenuBtn.java - ==>  Preparing: SELECT a.menu_Id,a.menu_url, m.btnType FROM `admin_menu` a LEFT JOIN admin_btn m on a.menu_Id=m.menu_Id LEFT JOIN admin_rolebtn r on r.btn_id=m.btn_id WHERE r.roleInfo_Id =? 
[DEBUG] 2025-07-18 09:24:22.959  com.xiao.core.basic.admin_menu.mapper.AdminMenuMapper.queryMenuBtn.java - ==> Parameters: 1(String)
[DEBUG] 2025-07-18 09:24:22.968  com.xiao.core.basic.admin_menu.mapper.AdminMenuMapper.queryMenuBtn.java - <==      Total: 19
[WARN] 2025-07-18 09:24:23.042  org.springframework.web.servlet.PageNotFound.java - No mapping for OPTIONS /admin/homePage/getStatisticAdmin
[DEBUG] 2025-07-18 09:24:23.055  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-18 09:24:23.055  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-18 09:24:23.058  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-18 09:24:26.565  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-18 09:24:26.566  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-18 09:24:26.569  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-18 09:24:26.577  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-18 09:24:26.577  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-18 09:24:26.582  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-18 09:24:26.594  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-18 09:24:26.595  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-18 09:24:26.607  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-18 09:24:26.617  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-18 09:24:26.618  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 10(Integer)
[DEBUG] 2025-07-18 09:24:26.671  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 10
