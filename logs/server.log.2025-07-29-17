[INFO] 2025-07-29 17:01:15.736  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.java - Shutting down ExecutorService 'taskScheduler'
[INFO] 2025-07-29 17:01:15.934  com.alibaba.druid.pool.DruidDataSource.java - {dataSource-1} closing ...
[INFO] 2025-07-29 17:01:15.951  com.alibaba.druid.pool.DruidDataSource.java - {dataSource-1} closed
[INFO] 2025-07-29 17:17:02.594  com.xiao.AppMainServer.java - Starting AppMainServer on DESKTOP-QQUQJ86 with PID 39764 (C:\Users\user\biddingdataserver\target\classes started by user in C:\Users\user\biddingdataserver)
[DEBUG] 2025-07-29 17:17:02.597  com.xiao.AppMainServer.java - Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[INFO] 2025-07-29 17:17:02.597  com.xiao.AppMainServer.java - No active profile set, falling back to default profiles: default
[INFO] 2025-07-29 17:17:04.334  org.springframework.data.repository.config.RepositoryConfigurationDelegate.java - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO] 2025-07-29 17:17:04.342  org.springframework.data.repository.config.RepositoryConfigurationDelegate.java - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-07-29 17:17:04.497  org.springframework.data.repository.config.RepositoryConfigurationDelegate.java - Finished Spring Data repository scanning in 118ms. Found 0 Redis repository interfaces.
[INFO] 2025-07-29 17:17:05.182  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 17:17:05.183  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 17:17:05.222  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 17:17:05.308  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 17:17:05.315  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 17:17:05.322  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 17:17:05.325  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 17:17:05.337  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 17:17:05.337  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'transactionAdviceConfig' of type [com.xiao.config.TransactionAdviceConfig$$EnhancerBySpringCGLIB$$544ad494] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 17:17:05.533  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'redisConfig' of type [com.xiao.config.RedisConfig$$EnhancerBySpringCGLIB$$3cf2fd79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 17:17:05.982  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.java - Tomcat initialized with port(s): 8090 (http)
[INFO] 2025-07-29 17:17:06.002  org.apache.coyote.http11.Http11NioProtocol.java - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-07-29 17:17:06.003  org.apache.catalina.core.StandardService.java - Starting service [Tomcat]
[INFO] 2025-07-29 17:17:06.003  org.apache.catalina.core.StandardEngine.java - Starting Servlet engine: [Apache Tomcat/9.0.31]
[INFO] 2025-07-29 17:17:06.276  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].java - Initializing Spring embedded WebApplicationContext
[INFO] 2025-07-29 17:17:06.276  org.springframework.web.context.ContextLoader.java - Root WebApplicationContext: initialization completed in 3526 ms
[DEBUG] 2025-07-29 17:17:09.173  com.xiao.config.RedisConfig$$EnhancerBySpringCGLIB$$3cf2fd79.java - 自定义RedisCacheManager加载完成
[WARN] 2025-07-29 17:17:10.705  org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration.java - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
[INFO] 2025-07-29 17:17:10.764  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.java - Initializing ExecutorService 'taskScheduler'
[INFO] 2025-07-29 17:17:10.875  org.apache.coyote.http11.Http11NioProtocol.java - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-07-29 17:17:10.934  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.java - Tomcat started on port(s): 8090 (http) with context path ''
[INFO] 2025-07-29 17:17:10.943  com.xiao.AppMainServer.java - Started AppMainServer in 8.881 seconds (JVM running for 12.295)
[INFO] 2025-07-29 17:17:54.122  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].java - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-07-29 17:17:54.122  org.springframework.web.servlet.DispatcherServlet.java - Initializing Servlet 'dispatcherServlet'
[INFO] 2025-07-29 17:17:54.138  org.springframework.web.servlet.DispatcherServlet.java - Completed initialization in 16 ms
[INFO] 2025-07-29 17:17:54.970  io.lettuce.core.EpollProvider.java - Starting without optional epoll library
[INFO] 2025-07-29 17:17:54.987  io.lettuce.core.KqueueProvider.java - Starting without optional kqueue library
[INFO] 2025-07-29 17:17:56.633  com.alibaba.druid.pool.DruidDataSource.java - {dataSource-1} inited
[DEBUG] 2025-07-29 17:17:57.275  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 17:17:57.309  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 17:17:57.347  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:17:57.360  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 17:17:57.360  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 17:17:57.369  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[WARN] 2025-07-29 17:17:57.682  org.springframework.web.servlet.PageNotFound.java - No mapping for OPTIONS /admin/homePage/getStatisticAdmin
[DEBUG] 2025-07-29 17:17:57.682  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 17:17:57.682  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 17:17:57.688  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:18:14.304  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 17:18:14.306  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 17:18:14.312  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:18:14.317  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 17:18:14.317  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 17:18:14.323  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 17:18:14.406  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-29 17:18:14.406  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-29 17:18:14.422  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-29 17:18:14.430  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url,html_content from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-29 17:18:14.431  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 25(Integer)
[DEBUG] 2025-07-29 17:18:14.595  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 25
[DEBUG] 2025-07-29 17:18:14.605  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==>  Preparing: SELECT IFNULL(SUM(winnerAmount),0) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-29 17:18:14.605  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==> Parameters: 
[DEBUG] 2025-07-29 17:18:14.623  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - <==      Total: 1
[DEBUG] 2025-07-29 17:18:17.065  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 17:18:17.067  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 17:18:17.074  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:18:17.080  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 17:18:17.080  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 17:18:17.084  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 17:18:17.240  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 17:18:17.240  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 17:18:17.245  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:18:17.251  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 17:18:17.251  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询单条记录(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 17:18:17.259  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 17:18:17.292  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryById.java - ==>  Preparing: SELECT id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url,html_content FROM zhongbiao WHERE id = ? and is_del=0 
[DEBUG] 2025-07-29 17:18:17.294  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryById.java - ==> Parameters: 49399(String)
[DEBUG] 2025-07-29 17:18:17.297  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:18:30.920  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 17:18:30.921  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 17:18:30.926  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:18:30.931  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 17:18:30.932  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 17:18:30.935  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 17:18:30.938  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-29 17:18:30.938  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-29 17:18:30.954  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-29 17:18:30.954  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url,html_content from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-29 17:18:30.954  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 25(Integer)
[DEBUG] 2025-07-29 17:18:31.099  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 25
[DEBUG] 2025-07-29 17:18:31.104  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==>  Preparing: SELECT IFNULL(SUM(winnerAmount),0) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-29 17:18:31.104  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==> Parameters: 
[DEBUG] 2025-07-29 17:18:31.121  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - <==      Total: 1
[DEBUG] 2025-07-29 17:29:25.273  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 17:29:25.273  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 17:29:25.277  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:29:25.284  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 17:29:25.285  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 17:29:25.288  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 17:29:25.639  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 17:29:25.639  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 17:29:25.650  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:29:25.652  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 17:29:25.652  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 17:29:25.658  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 17:29:25.670  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-29 17:29:25.670  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-29 17:29:25.682  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-29 17:29:25.682  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url,html_content from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-29 17:29:25.682  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 25(Integer)
[DEBUG] 2025-07-29 17:29:25.818  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 25
[DEBUG] 2025-07-29 17:29:25.823  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==>  Preparing: SELECT IFNULL(SUM(winnerAmount),0) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-29 17:29:25.823  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==> Parameters: 
[DEBUG] 2025-07-29 17:29:25.839  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - <==      Total: 1
[DEBUG] 2025-07-29 17:29:50.962  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 17:29:50.962  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 17:29:50.972  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:29:50.977  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 17:29:50.978  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 17:29:50.982  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 17:29:51.121  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 17:29:51.122  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 17:29:51.126  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:29:51.155  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 17:29:51.155  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 17:29:51.157  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 17:29:51.213  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-29 17:29:51.213  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-29 17:29:51.223  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-29 17:29:51.234  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url,html_content from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-29 17:29:51.237  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 25(Integer)
[DEBUG] 2025-07-29 17:29:51.369  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 25
[DEBUG] 2025-07-29 17:29:51.372  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==>  Preparing: SELECT IFNULL(SUM(winnerAmount),0) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-29 17:29:51.372  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==> Parameters: 
[DEBUG] 2025-07-29 17:29:51.387  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - <==      Total: 1
[DEBUG] 2025-07-29 17:29:54.329  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 17:29:54.329  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 17:29:54.332  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:29:54.339  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 17:29:54.339  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 17:29:54.342  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 17:29:56.142  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 17:29:56.142  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 17:29:56.154  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:29:56.161  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 17:29:56.161  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询单条记录(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 17:29:56.166  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 17:29:56.175  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryById.java - ==>  Preparing: SELECT id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url,html_content FROM zhongbiao WHERE id = ? and is_del=0 
[DEBUG] 2025-07-29 17:29:56.177  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryById.java - ==> Parameters: 49399(String)
[DEBUG] 2025-07-29 17:29:56.182  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:30:08.622  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 17:30:08.622  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 17:30:08.625  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:30:08.631  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 17:30:08.631  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 获取用户信息操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 17:30:08.635  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 17:30:08.718  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 17:30:08.718  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 17:30:08.718  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 17:30:08.718  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 17:30:08.718  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询单条记录(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 17:30:08.735  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 17:30:08.742  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryById.java - ==>  Preparing: SELECT id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url,html_content FROM zhongbiao WHERE id = ? and is_del=0 
[DEBUG] 2025-07-29 17:30:08.744  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryById.java - ==> Parameters: 49391(String)
[DEBUG] 2025-07-29 17:30:08.749  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryById.java - <==      Total: 1
