[INFO] 2025-07-29 16:14:10.385  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.java - Shutting down ExecutorService 'taskScheduler'
[INFO] 2025-07-29 16:14:10.519  com.alibaba.druid.pool.DruidDataSource.java - {dataSource-1} closing ...
[INFO] 2025-07-29 16:14:10.527  com.alibaba.druid.pool.DruidDataSource.java - {dataSource-1} closed
[INFO] 2025-07-29 16:33:36.149  com.xiao.AppMainServer.java - Starting AppMainServer on DESKTOP-QQUQJ86 with PID 58784 (C:\Users\user\biddingdataserver\target\classes started by user in C:\Users\user\biddingdataserver)
[DEBUG] 2025-07-29 16:33:36.156  com.xiao.AppMainServer.java - Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[INFO] 2025-07-29 16:33:36.157  com.xiao.AppMainServer.java - No active profile set, falling back to default profiles: default
[INFO] 2025-07-29 16:33:37.587  org.springframework.data.repository.config.RepositoryConfigurationDelegate.java - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO] 2025-07-29 16:33:37.594  org.springframework.data.repository.config.RepositoryConfigurationDelegate.java - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-07-29 16:33:37.734  org.springframework.data.repository.config.RepositoryConfigurationDelegate.java - Finished Spring Data repository scanning in 116ms. Found 0 Redis repository interfaces.
[INFO] 2025-07-29 16:33:38.510  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:33:38.512  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:33:38.564  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:33:38.664  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:33:38.669  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:33:38.678  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:33:38.680  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:33:38.691  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:33:38.693  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'transactionAdviceConfig' of type [com.xiao.config.TransactionAdviceConfig$$EnhancerBySpringCGLIB$$902433b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:33:38.880  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'redisConfig' of type [com.xiao.config.RedisConfig$$EnhancerBySpringCGLIB$$78cc5c95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:33:39.374  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.java - Tomcat initialized with port(s): 8090 (http)
[INFO] 2025-07-29 16:33:39.392  org.apache.coyote.http11.Http11NioProtocol.java - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-07-29 16:33:39.393  org.apache.catalina.core.StandardService.java - Starting service [Tomcat]
[INFO] 2025-07-29 16:33:39.393  org.apache.catalina.core.StandardEngine.java - Starting Servlet engine: [Apache Tomcat/9.0.31]
[INFO] 2025-07-29 16:33:39.677  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].java - Initializing Spring embedded WebApplicationContext
[INFO] 2025-07-29 16:33:39.678  org.springframework.web.context.ContextLoader.java - Root WebApplicationContext: initialization completed in 3423 ms
[DEBUG] 2025-07-29 16:33:41.120  com.xiao.config.RedisConfig$$EnhancerBySpringCGLIB$$78cc5c95.java - 自定义RedisCacheManager加载完成
[WARN] 2025-07-29 16:33:41.952  org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration.java - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
[INFO] 2025-07-29 16:33:41.997  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.java - Initializing ExecutorService 'taskScheduler'
[INFO] 2025-07-29 16:33:42.077  org.apache.coyote.http11.Http11NioProtocol.java - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-07-29 16:33:42.119  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.java - Tomcat started on port(s): 8090 (http) with context path ''
[INFO] 2025-07-29 16:33:42.126  com.xiao.AppMainServer.java - Started AppMainServer in 6.546 seconds (JVM running for 9.33)
[INFO] 2025-07-29 16:33:49.713  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].java - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-07-29 16:33:49.714  org.springframework.web.servlet.DispatcherServlet.java - Initializing Servlet 'dispatcherServlet'
[INFO] 2025-07-29 16:33:49.732  org.springframework.web.servlet.DispatcherServlet.java - Completed initialization in 18 ms
[WARN] 2025-07-29 16:33:49.752  org.springframework.web.servlet.PageNotFound.java - No mapping for OPTIONS /admin/homePage/getStatisticAdmin
[INFO] 2025-07-29 16:33:50.790  io.lettuce.core.EpollProvider.java - Starting without optional epoll library
[INFO] 2025-07-29 16:33:50.790  io.lettuce.core.KqueueProvider.java - Starting without optional kqueue library
[INFO] 2025-07-29 16:33:52.760  com.alibaba.druid.pool.DruidDataSource.java - {dataSource-1} inited
[DEBUG] 2025-07-29 16:33:53.475  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 16:33:53.475  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 16:33:53.510  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 16:33:53.510  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 16:33:53.558  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 16:33:53.558  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 16:33:53.576  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 16:33:53.576  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 16:33:53.576  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 16:33:53.683  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-29 16:33:53.683  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-29 16:33:53.699  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-29 16:33:53.709  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url,html_content from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-29 16:33:53.711  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 25(Integer)
[DEBUG] 2025-07-29 16:33:53.859  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 25
[DEBUG] 2025-07-29 16:34:00.247  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 16:34:00.248  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 16:34:00.259  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 16:34:00.267  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 16:34:00.268  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 16:34:00.274  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 16:34:00.277  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 AND publishDate BETWEEN ? AND ? 
[DEBUG] 2025-07-29 16:34:00.277  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 2025-07-01(String), 2025-07-29(String)
[DEBUG] 2025-07-29 16:34:00.293  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-29 16:34:00.311  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url,html_content from zhongbiao WHERE is_del=0 AND publishDate BETWEEN ? AND ? order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-29 16:34:00.311  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 2025-07-01(String), 2025-07-29(String), 0(Integer), 25(Integer)
[DEBUG] 2025-07-29 16:34:00.493  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 25
[DEBUG] 2025-07-29 16:34:28.294  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 16:34:28.294  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 16:34:28.300  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 16:34:28.313  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 16:34:28.315  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 16:34:28.318  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 16:34:28.337  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM bidding_info WHERE is_del=0 
[DEBUG] 2025-07-29 16:34:28.348  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-29 16:34:28.351  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-29 16:34:28.361  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==>  Preparing: select id,project_number,project_name,publish_date,content,project_id,total_content,data_source,html_url from bidding_info WHERE is_del=0 order by publish_date desc LIMIT ?, ? 
[DEBUG] 2025-07-29 16:34:28.362  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==> Parameters: 0(Integer), 15(Integer)
[DEBUG] 2025-07-29 16:34:28.498  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - <==      Total: 15
[DEBUG] 2025-07-29 16:34:30.645  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 16:34:30.645  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 16:34:30.661  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 16:34:30.665  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 16:34:30.665  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 16:34:30.677  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 16:34:30.692  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-29 16:34:30.694  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-29 16:34:30.709  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-29 16:34:30.711  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url,html_content from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-29 16:34:30.711  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 25(Integer)
[DEBUG] 2025-07-29 16:34:30.843  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 25
[INFO] 2025-07-29 16:55:42.960  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.java - Shutting down ExecutorService 'taskScheduler'
[INFO] 2025-07-29 16:55:43.105  com.alibaba.druid.pool.DruidDataSource.java - {dataSource-1} closing ...
[INFO] 2025-07-29 16:55:43.120  com.alibaba.druid.pool.DruidDataSource.java - {dataSource-1} closed
[INFO] 2025-07-29 16:55:59.646  com.xiao.AppMainServer.java - Starting AppMainServer on DESKTOP-QQUQJ86 with PID 20892 (C:\Users\user\biddingdataserver\target\classes started by user in C:\Users\user\biddingdataserver)
[DEBUG] 2025-07-29 16:55:59.650  com.xiao.AppMainServer.java - Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[INFO] 2025-07-29 16:55:59.650  com.xiao.AppMainServer.java - No active profile set, falling back to default profiles: default
[INFO] 2025-07-29 16:56:01.226  org.springframework.data.repository.config.RepositoryConfigurationDelegate.java - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO] 2025-07-29 16:56:01.235  org.springframework.data.repository.config.RepositoryConfigurationDelegate.java - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-07-29 16:56:01.400  org.springframework.data.repository.config.RepositoryConfigurationDelegate.java - Finished Spring Data repository scanning in 133ms. Found 0 Redis repository interfaces.
[INFO] 2025-07-29 16:56:02.092  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:56:02.093  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:56:02.136  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:56:02.239  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:56:02.245  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:56:02.253  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:56:02.255  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:56:02.265  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:56:02.266  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'transactionAdviceConfig' of type [com.xiao.config.TransactionAdviceConfig$$EnhancerBySpringCGLIB$$3722a8cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:56:02.440  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.java - Bean 'redisConfig' of type [com.xiao.config.RedisConfig$$EnhancerBySpringCGLIB$$1fcad1b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] 2025-07-29 16:56:02.926  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.java - Tomcat initialized with port(s): 8090 (http)
[INFO] 2025-07-29 16:56:02.946  org.apache.coyote.http11.Http11NioProtocol.java - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-07-29 16:56:02.947  org.apache.catalina.core.StandardService.java - Starting service [Tomcat]
[INFO] 2025-07-29 16:56:02.947  org.apache.catalina.core.StandardEngine.java - Starting Servlet engine: [Apache Tomcat/9.0.31]
[INFO] 2025-07-29 16:56:03.243  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].java - Initializing Spring embedded WebApplicationContext
[INFO] 2025-07-29 16:56:03.244  org.springframework.web.context.ContextLoader.java - Root WebApplicationContext: initialization completed in 3496 ms
[DEBUG] 2025-07-29 16:56:04.883  com.xiao.config.RedisConfig$$EnhancerBySpringCGLIB$$1fcad1b2.java - 自定义RedisCacheManager加载完成
[WARN] 2025-07-29 16:56:05.860  org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration.java - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
[INFO] 2025-07-29 16:56:05.915  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.java - Initializing ExecutorService 'taskScheduler'
[INFO] 2025-07-29 16:56:05.991  org.apache.coyote.http11.Http11NioProtocol.java - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-07-29 16:56:06.053  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.java - Tomcat started on port(s): 8090 (http) with context path ''
[INFO] 2025-07-29 16:56:06.063  com.xiao.AppMainServer.java - Started AppMainServer in 7.218 seconds (JVM running for 9.631)
[INFO] 2025-07-29 16:56:14.251  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].java - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-07-29 16:56:14.251  org.springframework.web.servlet.DispatcherServlet.java - Initializing Servlet 'dispatcherServlet'
[INFO] 2025-07-29 16:56:14.271  org.springframework.web.servlet.DispatcherServlet.java - Completed initialization in 20 ms
[INFO] 2025-07-29 16:56:15.248  io.lettuce.core.EpollProvider.java - Starting without optional epoll library
[INFO] 2025-07-29 16:56:15.248  io.lettuce.core.KqueueProvider.java - Starting without optional kqueue library
[INFO] 2025-07-29 16:56:17.026  com.alibaba.druid.pool.DruidDataSource.java - {dataSource-1} inited
[DEBUG] 2025-07-29 16:56:17.583  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 16:56:17.583  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 16:56:17.620  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 16:56:17.620  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 16:56:17.676  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 16:56:17.681  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 16:56:17.703  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 16:56:17.705  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 16:56:17.705  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 16:56:17.705  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 16:56:17.709  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 16:56:17.738  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 16:56:17.936  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-29 16:56:17.936  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-29 16:56:17.936  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM bidding_info WHERE is_del=0 
[DEBUG] 2025-07-29 16:56:17.936  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - ==> Parameters: 
[DEBUG] 2025-07-29 16:56:17.943  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-29 16:56:17.951  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==>  Preparing: select id,project_number,project_name,publish_date,content,project_id,total_content,data_source,html_url from bidding_info WHERE is_del=0 order by publish_date desc LIMIT ?, ? 
[DEBUG] 2025-07-29 16:56:17.953  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - ==> Parameters: 0(Integer), 15(Integer)
[DEBUG] 2025-07-29 16:56:17.955  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-29 16:56:17.965  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url,html_content from zhongbiao WHERE is_del=0 order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-29 16:56:17.967  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 0(Integer), 25(Integer)
[DEBUG] 2025-07-29 16:56:18.103  com.xiao.core.biddingInfo.mapper.BiddingInfoMapper.queryByMap.java - <==      Total: 15
[DEBUG] 2025-07-29 16:56:18.207  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 25
[DEBUG] 2025-07-29 16:56:18.223  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==>  Preparing: SELECT IFNULL(SUM(winnerAmount),0) FROM zhongbiao WHERE is_del=0 
[DEBUG] 2025-07-29 16:56:18.223  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==> Parameters: 
[DEBUG] 2025-07-29 16:56:18.239  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - <==      Total: 1
[DEBUG] 2025-07-29 16:56:30.983  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 16:56:30.983  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 16:56:31.001  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 16:56:31.005  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 16:56:31.005  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 16:56:31.012  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 16:56:31.019  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 AND publishDate BETWEEN ? AND ? 
[DEBUG] 2025-07-29 16:56:31.019  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 2025-07-01(String), 2025-07-29(String)
[DEBUG] 2025-07-29 16:56:31.040  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-29 16:56:31.047  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url,html_content from zhongbiao WHERE is_del=0 AND publishDate BETWEEN ? AND ? order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-29 16:56:31.048  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 2025-07-01(String), 2025-07-29(String), 0(Integer), 25(Integer)
[DEBUG] 2025-07-29 16:56:31.205  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 25
[DEBUG] 2025-07-29 16:56:31.205  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==>  Preparing: SELECT IFNULL(SUM(winnerAmount),0) FROM zhongbiao WHERE is_del=0 AND publishDate BETWEEN ? AND ? 
[DEBUG] 2025-07-29 16:56:31.215  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==> Parameters: 2025-07-01(String), 2025-07-29(String)
[DEBUG] 2025-07-29 16:56:31.236  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - <==      Total: 1
[DEBUG] 2025-07-29 16:56:42.783  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 16:56:42.783  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 16:56:42.793  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 16:56:42.802  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 16:56:42.808  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 16:56:42.815  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 16:56:42.835  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 AND publishDate BETWEEN ? AND ? AND winnerPrincipal LIKE CONCAT('%', ?, '%') 
[DEBUG] 2025-07-29 16:56:42.835  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 2025-07-01(String), 2025-07-29(String), 华力(String)
[DEBUG] 2025-07-29 16:56:42.851  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-29 16:56:42.865  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url,html_content from zhongbiao WHERE is_del=0 AND publishDate BETWEEN ? AND ? AND winnerPrincipal LIKE CONCAT('%', ?, '%') order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-29 16:56:42.867  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 2025-07-01(String), 2025-07-29(String), 华力(String), 0(Integer), 25(Integer)
[DEBUG] 2025-07-29 16:56:42.938  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 16
[DEBUG] 2025-07-29 16:56:42.939  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==>  Preparing: SELECT IFNULL(SUM(winnerAmount),0) FROM zhongbiao WHERE is_del=0 AND publishDate BETWEEN ? AND ? AND winnerPrincipal LIKE CONCAT('%', ?, '%') 
[DEBUG] 2025-07-29 16:56:42.939  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==> Parameters: 2025-07-01(String), 2025-07-29(String), 华力(String)
[DEBUG] 2025-07-29 16:56:42.972  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - <==      Total: 1
[DEBUG] 2025-07-29 16:56:50.923  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 16:56:50.930  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 16:56:50.941  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 16:56:50.953  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 16:56:50.955  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 16:56:50.958  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 16:56:50.967  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 AND publishDate BETWEEN ? AND ? 
[DEBUG] 2025-07-29 16:56:50.967  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 2025-07-01(String), 2025-07-29(String)
[DEBUG] 2025-07-29 16:56:50.984  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-29 16:56:50.984  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url,html_content from zhongbiao WHERE is_del=0 AND publishDate BETWEEN ? AND ? order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-29 16:56:50.984  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 2025-07-01(String), 2025-07-29(String), 0(Integer), 25(Integer)
[DEBUG] 2025-07-29 16:56:51.138  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 25
[DEBUG] 2025-07-29 16:56:51.150  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==>  Preparing: SELECT IFNULL(SUM(winnerAmount),0) FROM zhongbiao WHERE is_del=0 AND publishDate BETWEEN ? AND ? 
[DEBUG] 2025-07-29 16:56:51.150  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==> Parameters: 2025-07-01(String), 2025-07-29(String)
[DEBUG] 2025-07-29 16:56:51.165  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - <==      Total: 1
[DEBUG] 2025-07-29 16:58:12.339  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==>  Preparing: SELECT * FROM operator where operator_id = ? 
[DEBUG] 2025-07-29 16:58:12.339  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - ==> Parameters: 2(String)
[DEBUG] 2025-07-29 16:58:12.350  com.xiao.core.basic.operator.mapper.OperatorMapper.queryById.java - <==      Total: 1
[DEBUG] 2025-07-29 16:58:12.354  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==>  Preparing: INSERT INTO operator_log( remark,loginName,userName,roleId,createTime ) VALUES( ?, ?, ?, ?, now() ) 
[DEBUG] 2025-07-29 16:58:12.354  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - ==> Parameters: 查询列表操作(String), systemadmin(String), systemadmin(String), 1(Integer)
[DEBUG] 2025-07-29 16:58:12.370  com.xiao.core.basic.operator_log.mapper.OperatorLogMapper.insert.java - <==    Updates: 1
[DEBUG] 2025-07-29 16:58:12.390  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==>  Preparing: SELECT COUNT(1) FROM zhongbiao WHERE is_del=0 AND publishDate BETWEEN ? AND ? 
[DEBUG] 2025-07-29 16:58:12.393  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - ==> Parameters: 2025-01-01(String), 2025-07-31(String)
[DEBUG] 2025-07-29 16:58:12.417  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByCount.java - <==      Total: 1
[DEBUG] 2025-07-29 16:58:12.431  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==>  Preparing: select id,publishDate,projectNo,customer,noticeType,title,productLabels,winnerAmount,remark,winnerPrincipal,html_url,html_content from zhongbiao WHERE is_del=0 AND publishDate BETWEEN ? AND ? order by publishDate desc LIMIT ?, ? 
[DEBUG] 2025-07-29 16:58:12.434  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - ==> Parameters: 2025-01-01(String), 2025-07-31(String), 0(Integer), 25(Integer)
[DEBUG] 2025-07-29 16:58:12.643  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryByMap.java - <==      Total: 25
[DEBUG] 2025-07-29 16:58:12.653  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==>  Preparing: SELECT IFNULL(SUM(winnerAmount),0) FROM zhongbiao WHERE is_del=0 AND publishDate BETWEEN ? AND ? 
[DEBUG] 2025-07-29 16:58:12.653  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - ==> Parameters: 2025-01-01(String), 2025-07-31(String)
[DEBUG] 2025-07-29 16:58:12.675  com.xiao.core.zhongbiao.mapper.ZhongbiaoMapper.queryTotalAmount.java - <==      Total: 1
